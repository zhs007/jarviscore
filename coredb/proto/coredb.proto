syntax = "proto3";

package coredbpb;

// CONNECTTYPE - connect type
enum CONNECTTYPE {
    // unknown connection
    UNKNOWN_CONN = 0;    
    // direct connection
    DIRECT_CONN = 1;
    // forward once
    FORWARD_ONCE = 2;
    // forward multiple times
    FORWARD_MULTIPLE = 3;
}

// private data
message PrivateData {
    bytes priKey = 1;
    bytes pubKey = 2;
    int64 createTime = 3;
    int64 onlineTime = 4;
    string addr = 5;
    string strPriKey = 6;
    string strPubKey = 7;
    repeated string lstTrustNode = 8;
}

// node info
message NodeInfo {
    // This is the connection address of the node
    string servAddr = 1;
    // This is the address of the node
    string addr = 2;
    // This is the node name
    string name = 3;
    // This is the number of times I connected this node. 
    int32 connectNums = 4;
    // This is the number of times I successfully connected this node.
    int32 connectedNums = 5;
    // ctrlID
    int64 ctrlID = 6 [deprecated = true];
    // This is the list of addresses connected to this node
    repeated string lstClientAddr = 7;
    // This is the timestamp added for the first time.
    int64 addTime = 8;
    // Is this node connected to me?
    bool connectMe = 9;
    // Am I connected to this node?
    bool connectNode = 10 [deprecated = true];
    // nodetype version
    string nodeTypeVersion = 11;
    // node type
    string nodeType = 12;
    // jarviscore version
    string coreVersion = 13;
    // current message id
    // I send message for this node, the msgid is lastSendMsgID + 1
    int64 lastSendMsgID = 14; 
    // last connect time
    int64 lastConnectTime = 15;
    // last connected time
    int64 lastConnectedTime = 16;
    // last connect me time
    int64 lastConnectMeTime = 17;   
    // groups
    repeated string lstGroups = 18;
    // deprecated
    bool deprecated = 19;
    // last receive message id
    int64 lastRecvMsgID = 20;
    // connection type
    CONNECTTYPE connType = 21;
    // When I can't connect directly to this node, this is the list of nodes I know 
    // that can be directly connected to this node.
    repeated string validConnNodes = 22;
    // This node was ignored before this time, 
    // this property is only used for deprecated to be false
    int64 timestampDeprecated = 23;
    // This property is the number of failures to connect to the node. 
    // If there is a successful connection, this property will be reset to 0.
    int32 numsConnectFail = 24;
    // Only if this value is 0, I will execute requestnodes
    int64 lastMsgID4RequestNodes = 25;
    // This is the version number of the node node data, which is usually a hash value.
    // This value will be set to lastNodesVersion after requestnodes.
    string nodesVersion = 26;
    // This is the version number of the node node data, which is usually a hash value.
    string lastNodesVersion = 27;
}

// node info list
message NodeInfoList {
    int64 snapshotID = 1;
    int32 endIndex = 2;
    int32 maxIndex = 3;
    repeated NodeInfo nodes = 4;
}

// node info list v2
message NodeInfoList2 {
    repeated NodeInfo nodes = 1;
}

// FileSystem
message FileSystem {
    int64 curFileID = 1;
}