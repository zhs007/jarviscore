// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jarviscore.proto

package jarviscorepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// jarvis msg type
type MSGTYPE int32

const (
	// null type
	MSGTYPE_NULL_TYPE MSGTYPE = 0
	// connect jarvis node
	MSGTYPE_CONNECT_NODE MSGTYPE = 1
	// request a node's child nodes
	MSGTYPE_REQUEST_NODES MSGTYPE = 2
	// forward message
	MSGTYPE_FORWARD_MSG MSGTYPE = 3
	// request a ctrl msg
	MSGTYPE_REQUEST_CTRL MSGTYPE = 4
	// reply a ctrl result
	MSGTYPE_REPLY_CTRL_RESULT MSGTYPE = 5
	// trusted node request you trust a other node
	MSGTYPE_TRUST_NODE MSGTYPE = 6
	// trusted node request you remove a trusted node
	MSGTYPE_RM_TRUST_NODE MSGTYPE = 7
	// reply msg
	MSGTYPE_REPLY MSGTYPE = 8 // Deprecated: Do not use.
	// node info
	MSGTYPE_NODE_INFO MSGTYPE = 9
	// reply connect
	MSGTYPE_REPLY_CONNECT MSGTYPE = 10
	// local connect other
	MSGTYPE_LOCAL_CONNECT_OTHER MSGTYPE = 11
	// local sendmsg
	MSGTYPE_LOCAL_SENDMSG MSGTYPE = 12
	// local request nodes child
	MSGTYPE_LOCAL_REQUEST_NODES MSGTYPE = 13 // Deprecated: Do not use.
	// transfer file
	MSGTYPE_TRANSFER_FILE MSGTYPE = 14
	// request file
	MSGTYPE_REQUEST_FILE MSGTYPE = 15
	// reply request file
	MSGTYPE_REPLY_REQUEST_FILE MSGTYPE = 16
	// multi message
	MSGTYPE_MULTI_MSG MSGTYPE = 17
	// reply connect2
	MSGTYPE_REPLY_CONNECT2 MSGTYPE = 18 // Deprecated: Do not use.
	// reply transfer file
	MSGTYPE_REPLY_TRANSFER_FILE MSGTYPE = 19
	// reply2 msg
	MSGTYPE_REPLY2 MSGTYPE = 20
	// update node
	MSGTYPE_UPDATENODE MSGTYPE = 21
)

var MSGTYPE_name = map[int32]string{
	0:  "NULL_TYPE",
	1:  "CONNECT_NODE",
	2:  "REQUEST_NODES",
	3:  "FORWARD_MSG",
	4:  "REQUEST_CTRL",
	5:  "REPLY_CTRL_RESULT",
	6:  "TRUST_NODE",
	7:  "RM_TRUST_NODE",
	8:  "REPLY",
	9:  "NODE_INFO",
	10: "REPLY_CONNECT",
	11: "LOCAL_CONNECT_OTHER",
	12: "LOCAL_SENDMSG",
	13: "LOCAL_REQUEST_NODES",
	14: "TRANSFER_FILE",
	15: "REQUEST_FILE",
	16: "REPLY_REQUEST_FILE",
	17: "MULTI_MSG",
	18: "REPLY_CONNECT2",
	19: "REPLY_TRANSFER_FILE",
	20: "REPLY2",
	21: "UPDATENODE",
}
var MSGTYPE_value = map[string]int32{
	"NULL_TYPE":           0,
	"CONNECT_NODE":        1,
	"REQUEST_NODES":       2,
	"FORWARD_MSG":         3,
	"REQUEST_CTRL":        4,
	"REPLY_CTRL_RESULT":   5,
	"TRUST_NODE":          6,
	"RM_TRUST_NODE":       7,
	"REPLY":               8,
	"NODE_INFO":           9,
	"REPLY_CONNECT":       10,
	"LOCAL_CONNECT_OTHER": 11,
	"LOCAL_SENDMSG":       12,
	"LOCAL_REQUEST_NODES": 13,
	"TRANSFER_FILE":       14,
	"REQUEST_FILE":        15,
	"REPLY_REQUEST_FILE":  16,
	"MULTI_MSG":           17,
	"REPLY_CONNECT2":      18,
	"REPLY_TRANSFER_FILE": 19,
	"REPLY2":              20,
	"UPDATENODE":          21,
}

func (x MSGTYPE) String() string {
	return proto.EnumName(MSGTYPE_name, int32(x))
}
func (MSGTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{0}
}

// REPLYTYPE - reply type
type REPLYTYPE int32

const (
	// reply ok
	REPLYTYPE_OK REPLYTYPE = 0
	// forward
	REPLYTYPE_FORWARD REPLYTYPE = 1
	// timeout
	REPLYTYPE_TIMEOUT REPLYTYPE = 2
	// is me
	REPLYTYPE_ISME REPLYTYPE = 3
	// error
	REPLYTYPE_ERROR REPLYTYPE = 4
	// messageid error
	REPLYTYPE_ERRMSGID REPLYTYPE = 5
)

var REPLYTYPE_name = map[int32]string{
	0: "OK",
	1: "FORWARD",
	2: "TIMEOUT",
	3: "ISME",
	4: "ERROR",
	5: "ERRMSGID",
}
var REPLYTYPE_value = map[string]int32{
	"OK":       0,
	"FORWARD":  1,
	"TIMEOUT":  2,
	"ISME":     3,
	"ERROR":    4,
	"ERRMSGID": 5,
}

func (x REPLYTYPE) String() string {
	return proto.EnumName(REPLYTYPE_name, int32(x))
}
func (REPLYTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{1}
}

type NodeBaseInfo struct {
	// node server address
	ServAddr string `protobuf:"bytes,1,opt,name=servAddr,proto3" json:"servAddr,omitempty"`
	// node address
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// node name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// nodetype version
	NodeTypeVersion string `protobuf:"bytes,4,opt,name=nodeTypeVersion,proto3" json:"nodeTypeVersion,omitempty"`
	// node type
	NodeType string `protobuf:"bytes,5,opt,name=nodeType,proto3" json:"nodeType,omitempty"`
	// jarviscore version
	CoreVersion          string   `protobuf:"bytes,6,opt,name=coreVersion,proto3" json:"coreVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeBaseInfo) Reset()         { *m = NodeBaseInfo{} }
func (m *NodeBaseInfo) String() string { return proto.CompactTextString(m) }
func (*NodeBaseInfo) ProtoMessage()    {}
func (*NodeBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{0}
}
func (m *NodeBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeBaseInfo.Unmarshal(m, b)
}
func (m *NodeBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeBaseInfo.Marshal(b, m, deterministic)
}
func (dst *NodeBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeBaseInfo.Merge(dst, src)
}
func (m *NodeBaseInfo) XXX_Size() int {
	return xxx_messageInfo_NodeBaseInfo.Size(m)
}
func (m *NodeBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeBaseInfo proto.InternalMessageInfo

func (m *NodeBaseInfo) GetServAddr() string {
	if m != nil {
		return m.ServAddr
	}
	return ""
}

func (m *NodeBaseInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *NodeBaseInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeBaseInfo) GetNodeTypeVersion() string {
	if m != nil {
		return m.NodeTypeVersion
	}
	return ""
}

func (m *NodeBaseInfo) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *NodeBaseInfo) GetCoreVersion() string {
	if m != nil {
		return m.CoreVersion
	}
	return ""
}

// ReplyConnect2 - used in REPLY_CONNECT2
type ReplyConnect2 struct {
	YourLastMsgID        int64         `protobuf:"varint,1,opt,name=yourLastMsgID,proto3" json:"yourLastMsgID,omitempty"`
	Nbi                  *NodeBaseInfo `protobuf:"bytes,2,opt,name=nbi,proto3" json:"nbi,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReplyConnect2) Reset()         { *m = ReplyConnect2{} }
func (m *ReplyConnect2) String() string { return proto.CompactTextString(m) }
func (*ReplyConnect2) ProtoMessage()    {}
func (*ReplyConnect2) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{1}
}
func (m *ReplyConnect2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyConnect2.Unmarshal(m, b)
}
func (m *ReplyConnect2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyConnect2.Marshal(b, m, deterministic)
}
func (dst *ReplyConnect2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyConnect2.Merge(dst, src)
}
func (m *ReplyConnect2) XXX_Size() int {
	return xxx_messageInfo_ReplyConnect2.Size(m)
}
func (m *ReplyConnect2) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyConnect2.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyConnect2 proto.InternalMessageInfo

func (m *ReplyConnect2) GetYourLastMsgID() int64 {
	if m != nil {
		return m.YourLastMsgID
	}
	return 0
}

func (m *ReplyConnect2) GetNbi() *NodeBaseInfo {
	if m != nil {
		return m.Nbi
	}
	return nil
}

// ConnectInfo - used in LOCAL_CONNECT_OTHER, CONNECT_NODE
type ConnectInfo struct {
	ServAddr             string        `protobuf:"bytes,1,opt,name=servAddr,proto3" json:"servAddr,omitempty"`
	MyInfo               *NodeBaseInfo `protobuf:"bytes,2,opt,name=myInfo,proto3" json:"myInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConnectInfo) Reset()         { *m = ConnectInfo{} }
func (m *ConnectInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectInfo) ProtoMessage()    {}
func (*ConnectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{2}
}
func (m *ConnectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectInfo.Unmarshal(m, b)
}
func (m *ConnectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectInfo.Marshal(b, m, deterministic)
}
func (dst *ConnectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectInfo.Merge(dst, src)
}
func (m *ConnectInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectInfo.Size(m)
}
func (m *ConnectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectInfo proto.InternalMessageInfo

func (m *ConnectInfo) GetServAddr() string {
	if m != nil {
		return m.ServAddr
	}
	return ""
}

func (m *ConnectInfo) GetMyInfo() *NodeBaseInfo {
	if m != nil {
		return m.MyInfo
	}
	return nil
}

type ReplyJoin struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyJoin) Reset()         { *m = ReplyJoin{} }
func (m *ReplyJoin) String() string { return proto.CompactTextString(m) }
func (*ReplyJoin) ProtoMessage()    {}
func (*ReplyJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{3}
}
func (m *ReplyJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyJoin.Unmarshal(m, b)
}
func (m *ReplyJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyJoin.Marshal(b, m, deterministic)
}
func (dst *ReplyJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyJoin.Merge(dst, src)
}
func (m *ReplyJoin) XXX_Size() int {
	return xxx_messageInfo_ReplyJoin.Size(m)
}
func (m *ReplyJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyJoin.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyJoin proto.InternalMessageInfo

func (m *ReplyJoin) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReplyJoin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// ReplyTransferFile - used in REPLY_TRANSFER_FILE
type ReplyTransferFile struct {
	Md5String            string   `protobuf:"bytes,1,opt,name=md5String,proto3" json:"md5String,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyTransferFile) Reset()         { *m = ReplyTransferFile{} }
func (m *ReplyTransferFile) String() string { return proto.CompactTextString(m) }
func (*ReplyTransferFile) ProtoMessage()    {}
func (*ReplyTransferFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{4}
}
func (m *ReplyTransferFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTransferFile.Unmarshal(m, b)
}
func (m *ReplyTransferFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTransferFile.Marshal(b, m, deterministic)
}
func (dst *ReplyTransferFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTransferFile.Merge(dst, src)
}
func (m *ReplyTransferFile) XXX_Size() int {
	return xxx_messageInfo_ReplyTransferFile.Size(m)
}
func (m *ReplyTransferFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTransferFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTransferFile proto.InternalMessageInfo

func (m *ReplyTransferFile) GetMd5String() string {
	if m != nil {
		return m.Md5String
	}
	return ""
}

// FileData - file data
type FileData struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	DestPath             string   `protobuf:"bytes,3,opt,name=destPath,proto3" json:"destPath,omitempty"`
	Md5String            string   `protobuf:"bytes,4,opt,name=md5String,proto3" json:"md5String,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileData) Reset()         { *m = FileData{} }
func (m *FileData) String() string { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()    {}
func (*FileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{5}
}
func (m *FileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileData.Unmarshal(m, b)
}
func (m *FileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileData.Marshal(b, m, deterministic)
}
func (dst *FileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileData.Merge(dst, src)
}
func (m *FileData) XXX_Size() int {
	return xxx_messageInfo_FileData.Size(m)
}
func (m *FileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FileData.DiscardUnknown(m)
}

var xxx_messageInfo_FileData proto.InternalMessageInfo

func (m *FileData) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileData) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileData) GetDestPath() string {
	if m != nil {
		return m.DestPath
	}
	return ""
}

func (m *FileData) GetMd5String() string {
	if m != nil {
		return m.Md5String
	}
	return ""
}

// RequestFile - request file
type RequestFile struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestFile) Reset()         { *m = RequestFile{} }
func (m *RequestFile) String() string { return proto.CompactTextString(m) }
func (*RequestFile) ProtoMessage()    {}
func (*RequestFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{6}
}
func (m *RequestFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestFile.Unmarshal(m, b)
}
func (m *RequestFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestFile.Marshal(b, m, deterministic)
}
func (dst *RequestFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestFile.Merge(dst, src)
}
func (m *RequestFile) XXX_Size() int {
	return xxx_messageInfo_RequestFile.Size(m)
}
func (m *RequestFile) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestFile.DiscardUnknown(m)
}

var xxx_messageInfo_RequestFile proto.InternalMessageInfo

func (m *RequestFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// CtrlScriptData - used in CtrlInfo.dat
//                - scriptfile
type CtrlScriptData struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	DestPath             string   `protobuf:"bytes,2,opt,name=destPath,proto3" json:"destPath,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlScriptData) Reset()         { *m = CtrlScriptData{} }
func (m *CtrlScriptData) String() string { return proto.CompactTextString(m) }
func (*CtrlScriptData) ProtoMessage()    {}
func (*CtrlScriptData) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{7}
}
func (m *CtrlScriptData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlScriptData.Unmarshal(m, b)
}
func (m *CtrlScriptData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlScriptData.Marshal(b, m, deterministic)
}
func (dst *CtrlScriptData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlScriptData.Merge(dst, src)
}
func (m *CtrlScriptData) XXX_Size() int {
	return xxx_messageInfo_CtrlScriptData.Size(m)
}
func (m *CtrlScriptData) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlScriptData.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlScriptData proto.InternalMessageInfo

func (m *CtrlScriptData) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *CtrlScriptData) GetDestPath() string {
	if m != nil {
		return m.DestPath
	}
	return ""
}

func (m *CtrlScriptData) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// CtrlScript2Data - used in CtrlInfo.dat
//                 - scriptfile2
type CtrlScript2Data struct {
	ScriptFile           *FileData   `protobuf:"bytes,1,opt,name=scriptFile,proto3" json:"scriptFile,omitempty"`
	SrcFiles             []*FileData `protobuf:"bytes,2,rep,name=srcFiles,proto3" json:"srcFiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CtrlScript2Data) Reset()         { *m = CtrlScript2Data{} }
func (m *CtrlScript2Data) String() string { return proto.CompactTextString(m) }
func (*CtrlScript2Data) ProtoMessage()    {}
func (*CtrlScript2Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{8}
}
func (m *CtrlScript2Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlScript2Data.Unmarshal(m, b)
}
func (m *CtrlScript2Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlScript2Data.Marshal(b, m, deterministic)
}
func (dst *CtrlScript2Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlScript2Data.Merge(dst, src)
}
func (m *CtrlScript2Data) XXX_Size() int {
	return xxx_messageInfo_CtrlScript2Data.Size(m)
}
func (m *CtrlScript2Data) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlScript2Data.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlScript2Data proto.InternalMessageInfo

func (m *CtrlScript2Data) GetScriptFile() *FileData {
	if m != nil {
		return m.ScriptFile
	}
	return nil
}

func (m *CtrlScript2Data) GetSrcFiles() []*FileData {
	if m != nil {
		return m.SrcFiles
	}
	return nil
}

// CtrlInfo -
type CtrlInfo struct {
	CtrlID               int64    `protobuf:"varint,1,opt,name=ctrlID,proto3" json:"ctrlID,omitempty"`
	CtrlType             string   `protobuf:"bytes,2,opt,name=ctrlType,proto3" json:"ctrlType,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Params               []string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Dat                  *any.Any `protobuf:"bytes,1000,opt,name=dat,proto3" json:"dat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlInfo) Reset()         { *m = CtrlInfo{} }
func (m *CtrlInfo) String() string { return proto.CompactTextString(m) }
func (*CtrlInfo) ProtoMessage()    {}
func (*CtrlInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{9}
}
func (m *CtrlInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlInfo.Unmarshal(m, b)
}
func (m *CtrlInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlInfo.Marshal(b, m, deterministic)
}
func (dst *CtrlInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlInfo.Merge(dst, src)
}
func (m *CtrlInfo) XXX_Size() int {
	return xxx_messageInfo_CtrlInfo.Size(m)
}
func (m *CtrlInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlInfo proto.InternalMessageInfo

func (m *CtrlInfo) GetCtrlID() int64 {
	if m != nil {
		return m.CtrlID
	}
	return 0
}

func (m *CtrlInfo) GetCtrlType() string {
	if m != nil {
		return m.CtrlType
	}
	return ""
}

func (m *CtrlInfo) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *CtrlInfo) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CtrlInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CtrlInfo) GetDat() *any.Any {
	if m != nil {
		return m.Dat
	}
	return nil
}

type CtrlResult struct {
	CtrlID               int64    `protobuf:"varint,1,opt,name=ctrlID,proto3" json:"ctrlID,omitempty"`
	CtrlResult           string   `protobuf:"bytes,2,opt,name=ctrlResult,proto3" json:"ctrlResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlResult) Reset()         { *m = CtrlResult{} }
func (m *CtrlResult) String() string { return proto.CompactTextString(m) }
func (*CtrlResult) ProtoMessage()    {}
func (*CtrlResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{10}
}
func (m *CtrlResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlResult.Unmarshal(m, b)
}
func (m *CtrlResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlResult.Marshal(b, m, deterministic)
}
func (dst *CtrlResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlResult.Merge(dst, src)
}
func (m *CtrlResult) XXX_Size() int {
	return xxx_messageInfo_CtrlResult.Size(m)
}
func (m *CtrlResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlResult.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlResult proto.InternalMessageInfo

func (m *CtrlResult) GetCtrlID() int64 {
	if m != nil {
		return m.CtrlID
	}
	return 0
}

func (m *CtrlResult) GetCtrlResult() string {
	if m != nil {
		return m.CtrlResult
	}
	return ""
}

type MultiMsgData struct {
	TotalMsgLength       int64    `protobuf:"varint,1,opt,name=totalMsgLength,proto3" json:"totalMsgLength,omitempty"`
	CurMsgIndex          int32    `protobuf:"varint,2,opt,name=curMsgIndex,proto3" json:"curMsgIndex,omitempty"`
	Buf                  []byte   `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiMsgData) Reset()         { *m = MultiMsgData{} }
func (m *MultiMsgData) String() string { return proto.CompactTextString(m) }
func (*MultiMsgData) ProtoMessage()    {}
func (*MultiMsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{11}
}
func (m *MultiMsgData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiMsgData.Unmarshal(m, b)
}
func (m *MultiMsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiMsgData.Marshal(b, m, deterministic)
}
func (dst *MultiMsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiMsgData.Merge(dst, src)
}
func (m *MultiMsgData) XXX_Size() int {
	return xxx_messageInfo_MultiMsgData.Size(m)
}
func (m *MultiMsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiMsgData.DiscardUnknown(m)
}

var xxx_messageInfo_MultiMsgData proto.InternalMessageInfo

func (m *MultiMsgData) GetTotalMsgLength() int64 {
	if m != nil {
		return m.TotalMsgLength
	}
	return 0
}

func (m *MultiMsgData) GetCurMsgIndex() int32 {
	if m != nil {
		return m.CurMsgIndex
	}
	return 0
}

func (m *MultiMsgData) GetBuf() []byte {
	if m != nil {
		return m.Buf
	}
	return nil
}

// UpdateNode - for UPDATENODE
type UpdateNode struct {
	// nodetype version
	NodeTypeVersion string `protobuf:"bytes,1,opt,name=nodeTypeVersion,proto3" json:"nodeTypeVersion,omitempty"`
	// node type
	NodeType             string   `protobuf:"bytes,2,opt,name=nodeType,proto3" json:"nodeType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNode) Reset()         { *m = UpdateNode{} }
func (m *UpdateNode) String() string { return proto.CompactTextString(m) }
func (*UpdateNode) ProtoMessage()    {}
func (*UpdateNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{12}
}
func (m *UpdateNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNode.Unmarshal(m, b)
}
func (m *UpdateNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNode.Marshal(b, m, deterministic)
}
func (dst *UpdateNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNode.Merge(dst, src)
}
func (m *UpdateNode) XXX_Size() int {
	return xxx_messageInfo_UpdateNode.Size(m)
}
func (m *UpdateNode) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNode.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNode proto.InternalMessageInfo

func (m *UpdateNode) GetNodeTypeVersion() string {
	if m != nil {
		return m.NodeTypeVersion
	}
	return ""
}

func (m *UpdateNode) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

// JarvisMsg - jarvis base msg
//      sign(msgID + msgType + destAddr + curTime + srcAddr + data)
type JarvisMsg struct {
	MsgID      int64     `protobuf:"varint,1,opt,name=msgID,proto3" json:"msgID,omitempty"`
	CurTime    int64     `protobuf:"varint,2,opt,name=curTime,proto3" json:"curTime,omitempty"`
	SignR      []byte    `protobuf:"bytes,3,opt,name=signR,proto3" json:"signR,omitempty"`
	SignS      []byte    `protobuf:"bytes,4,opt,name=signS,proto3" json:"signS,omitempty"`
	PubKey     []byte    `protobuf:"bytes,5,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	SrcAddr    string    `protobuf:"bytes,6,opt,name=srcAddr,proto3" json:"srcAddr,omitempty"`
	MyAddr     string    `protobuf:"bytes,7,opt,name=myAddr,proto3" json:"myAddr,omitempty"`
	DestAddr   string    `protobuf:"bytes,8,opt,name=destAddr,proto3" json:"destAddr,omitempty"`
	MsgType    MSGTYPE   `protobuf:"varint,9,opt,name=msgType,proto3,enum=jarviscorepb.MSGTYPE" json:"msgType,omitempty"`
	ReplyType  REPLYTYPE `protobuf:"varint,10,opt,name=replyType,proto3,enum=jarviscorepb.REPLYTYPE" json:"replyType,omitempty"`
	Err        string    `protobuf:"bytes,11,opt,name=err,proto3" json:"err,omitempty"`
	LastMsgID  int64     `protobuf:"varint,12,opt,name=lastMsgID,proto3" json:"lastMsgID,omitempty"`
	ReplyMsgID int64     `protobuf:"varint,13,opt,name=replyMsgID,proto3" json:"replyMsgID,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*JarvisMsg_NodeInfo
	//	*JarvisMsg_CtrlInfo
	//	*JarvisMsg_CtrlResult
	//	*JarvisMsg_ConnInfo
	//	*JarvisMsg_Msg
	//	*JarvisMsg_File
	//	*JarvisMsg_RequestFile
	//	*JarvisMsg_MultiMsgData
	//	*JarvisMsg_ReplyConn2
	//	*JarvisMsg_ReplyTransferFile
	//	*JarvisMsg_UpdateNode
	Data                 isJarvisMsg_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JarvisMsg) Reset()         { *m = JarvisMsg{} }
func (m *JarvisMsg) String() string { return proto.CompactTextString(m) }
func (*JarvisMsg) ProtoMessage()    {}
func (*JarvisMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_7b99be9d5e7b610b, []int{13}
}
func (m *JarvisMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JarvisMsg.Unmarshal(m, b)
}
func (m *JarvisMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JarvisMsg.Marshal(b, m, deterministic)
}
func (dst *JarvisMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JarvisMsg.Merge(dst, src)
}
func (m *JarvisMsg) XXX_Size() int {
	return xxx_messageInfo_JarvisMsg.Size(m)
}
func (m *JarvisMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_JarvisMsg.DiscardUnknown(m)
}

var xxx_messageInfo_JarvisMsg proto.InternalMessageInfo

type isJarvisMsg_Data interface {
	isJarvisMsg_Data()
}

type JarvisMsg_NodeInfo struct {
	NodeInfo *NodeBaseInfo `protobuf:"bytes,100,opt,name=nodeInfo,proto3,oneof"`
}
type JarvisMsg_CtrlInfo struct {
	CtrlInfo *CtrlInfo `protobuf:"bytes,101,opt,name=ctrlInfo,proto3,oneof"`
}
type JarvisMsg_CtrlResult struct {
	CtrlResult *CtrlResult `protobuf:"bytes,102,opt,name=ctrlResult,proto3,oneof"`
}
type JarvisMsg_ConnInfo struct {
	ConnInfo *ConnectInfo `protobuf:"bytes,103,opt,name=connInfo,proto3,oneof"`
}
type JarvisMsg_Msg struct {
	Msg *JarvisMsg `protobuf:"bytes,104,opt,name=msg,proto3,oneof"`
}
type JarvisMsg_File struct {
	File *FileData `protobuf:"bytes,105,opt,name=file,proto3,oneof"`
}
type JarvisMsg_RequestFile struct {
	RequestFile *RequestFile `protobuf:"bytes,106,opt,name=requestFile,proto3,oneof"`
}
type JarvisMsg_MultiMsgData struct {
	MultiMsgData *MultiMsgData `protobuf:"bytes,107,opt,name=multiMsgData,proto3,oneof"`
}
type JarvisMsg_ReplyConn2 struct {
	ReplyConn2 *ReplyConnect2 `protobuf:"bytes,108,opt,name=replyConn2,proto3,oneof"`
}
type JarvisMsg_ReplyTransferFile struct {
	ReplyTransferFile *ReplyTransferFile `protobuf:"bytes,109,opt,name=replyTransferFile,proto3,oneof"`
}
type JarvisMsg_UpdateNode struct {
	UpdateNode *UpdateNode `protobuf:"bytes,110,opt,name=updateNode,proto3,oneof"`
}

func (*JarvisMsg_NodeInfo) isJarvisMsg_Data()          {}
func (*JarvisMsg_CtrlInfo) isJarvisMsg_Data()          {}
func (*JarvisMsg_CtrlResult) isJarvisMsg_Data()        {}
func (*JarvisMsg_ConnInfo) isJarvisMsg_Data()          {}
func (*JarvisMsg_Msg) isJarvisMsg_Data()               {}
func (*JarvisMsg_File) isJarvisMsg_Data()              {}
func (*JarvisMsg_RequestFile) isJarvisMsg_Data()       {}
func (*JarvisMsg_MultiMsgData) isJarvisMsg_Data()      {}
func (*JarvisMsg_ReplyConn2) isJarvisMsg_Data()        {}
func (*JarvisMsg_ReplyTransferFile) isJarvisMsg_Data() {}
func (*JarvisMsg_UpdateNode) isJarvisMsg_Data()        {}

func (m *JarvisMsg) GetData() isJarvisMsg_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *JarvisMsg) GetMsgID() int64 {
	if m != nil {
		return m.MsgID
	}
	return 0
}

func (m *JarvisMsg) GetCurTime() int64 {
	if m != nil {
		return m.CurTime
	}
	return 0
}

func (m *JarvisMsg) GetSignR() []byte {
	if m != nil {
		return m.SignR
	}
	return nil
}

func (m *JarvisMsg) GetSignS() []byte {
	if m != nil {
		return m.SignS
	}
	return nil
}

func (m *JarvisMsg) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *JarvisMsg) GetSrcAddr() string {
	if m != nil {
		return m.SrcAddr
	}
	return ""
}

func (m *JarvisMsg) GetMyAddr() string {
	if m != nil {
		return m.MyAddr
	}
	return ""
}

func (m *JarvisMsg) GetDestAddr() string {
	if m != nil {
		return m.DestAddr
	}
	return ""
}

func (m *JarvisMsg) GetMsgType() MSGTYPE {
	if m != nil {
		return m.MsgType
	}
	return MSGTYPE_NULL_TYPE
}

func (m *JarvisMsg) GetReplyType() REPLYTYPE {
	if m != nil {
		return m.ReplyType
	}
	return REPLYTYPE_OK
}

func (m *JarvisMsg) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *JarvisMsg) GetLastMsgID() int64 {
	if m != nil {
		return m.LastMsgID
	}
	return 0
}

func (m *JarvisMsg) GetReplyMsgID() int64 {
	if m != nil {
		return m.ReplyMsgID
	}
	return 0
}

func (m *JarvisMsg) GetNodeInfo() *NodeBaseInfo {
	if x, ok := m.GetData().(*JarvisMsg_NodeInfo); ok {
		return x.NodeInfo
	}
	return nil
}

func (m *JarvisMsg) GetCtrlInfo() *CtrlInfo {
	if x, ok := m.GetData().(*JarvisMsg_CtrlInfo); ok {
		return x.CtrlInfo
	}
	return nil
}

func (m *JarvisMsg) GetCtrlResult() *CtrlResult {
	if x, ok := m.GetData().(*JarvisMsg_CtrlResult); ok {
		return x.CtrlResult
	}
	return nil
}

func (m *JarvisMsg) GetConnInfo() *ConnectInfo {
	if x, ok := m.GetData().(*JarvisMsg_ConnInfo); ok {
		return x.ConnInfo
	}
	return nil
}

func (m *JarvisMsg) GetMsg() *JarvisMsg {
	if x, ok := m.GetData().(*JarvisMsg_Msg); ok {
		return x.Msg
	}
	return nil
}

func (m *JarvisMsg) GetFile() *FileData {
	if x, ok := m.GetData().(*JarvisMsg_File); ok {
		return x.File
	}
	return nil
}

func (m *JarvisMsg) GetRequestFile() *RequestFile {
	if x, ok := m.GetData().(*JarvisMsg_RequestFile); ok {
		return x.RequestFile
	}
	return nil
}

func (m *JarvisMsg) GetMultiMsgData() *MultiMsgData {
	if x, ok := m.GetData().(*JarvisMsg_MultiMsgData); ok {
		return x.MultiMsgData
	}
	return nil
}

// Deprecated: Do not use.
func (m *JarvisMsg) GetReplyConn2() *ReplyConnect2 {
	if x, ok := m.GetData().(*JarvisMsg_ReplyConn2); ok {
		return x.ReplyConn2
	}
	return nil
}

func (m *JarvisMsg) GetReplyTransferFile() *ReplyTransferFile {
	if x, ok := m.GetData().(*JarvisMsg_ReplyTransferFile); ok {
		return x.ReplyTransferFile
	}
	return nil
}

func (m *JarvisMsg) GetUpdateNode() *UpdateNode {
	if x, ok := m.GetData().(*JarvisMsg_UpdateNode); ok {
		return x.UpdateNode
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*JarvisMsg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _JarvisMsg_OneofMarshaler, _JarvisMsg_OneofUnmarshaler, _JarvisMsg_OneofSizer, []interface{}{
		(*JarvisMsg_NodeInfo)(nil),
		(*JarvisMsg_CtrlInfo)(nil),
		(*JarvisMsg_CtrlResult)(nil),
		(*JarvisMsg_ConnInfo)(nil),
		(*JarvisMsg_Msg)(nil),
		(*JarvisMsg_File)(nil),
		(*JarvisMsg_RequestFile)(nil),
		(*JarvisMsg_MultiMsgData)(nil),
		(*JarvisMsg_ReplyConn2)(nil),
		(*JarvisMsg_ReplyTransferFile)(nil),
		(*JarvisMsg_UpdateNode)(nil),
	}
}

func _JarvisMsg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*JarvisMsg)
	// data
	switch x := m.Data.(type) {
	case *JarvisMsg_NodeInfo:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NodeInfo); err != nil {
			return err
		}
	case *JarvisMsg_CtrlInfo:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CtrlInfo); err != nil {
			return err
		}
	case *JarvisMsg_CtrlResult:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CtrlResult); err != nil {
			return err
		}
	case *JarvisMsg_ConnInfo:
		b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConnInfo); err != nil {
			return err
		}
	case *JarvisMsg_Msg:
		b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Msg); err != nil {
			return err
		}
	case *JarvisMsg_File:
		b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case *JarvisMsg_RequestFile:
		b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestFile); err != nil {
			return err
		}
	case *JarvisMsg_MultiMsgData:
		b.EncodeVarint(107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MultiMsgData); err != nil {
			return err
		}
	case *JarvisMsg_ReplyConn2:
		b.EncodeVarint(108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplyConn2); err != nil {
			return err
		}
	case *JarvisMsg_ReplyTransferFile:
		b.EncodeVarint(109<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplyTransferFile); err != nil {
			return err
		}
	case *JarvisMsg_UpdateNode:
		b.EncodeVarint(110<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UpdateNode); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("JarvisMsg.Data has unexpected type %T", x)
	}
	return nil
}

func _JarvisMsg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*JarvisMsg)
	switch tag {
	case 100: // data.nodeInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NodeBaseInfo)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_NodeInfo{msg}
		return true, err
	case 101: // data.ctrlInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CtrlInfo)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_CtrlInfo{msg}
		return true, err
	case 102: // data.ctrlResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CtrlResult)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_CtrlResult{msg}
		return true, err
	case 103: // data.connInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConnectInfo)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_ConnInfo{msg}
		return true, err
	case 104: // data.msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JarvisMsg)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_Msg{msg}
		return true, err
	case 105: // data.file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileData)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_File{msg}
		return true, err
	case 106: // data.requestFile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestFile)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_RequestFile{msg}
		return true, err
	case 107: // data.multiMsgData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MultiMsgData)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_MultiMsgData{msg}
		return true, err
	case 108: // data.replyConn2
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyConnect2)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_ReplyConn2{msg}
		return true, err
	case 109: // data.replyTransferFile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyTransferFile)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_ReplyTransferFile{msg}
		return true, err
	case 110: // data.updateNode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateNode)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_UpdateNode{msg}
		return true, err
	default:
		return false, nil
	}
}

func _JarvisMsg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*JarvisMsg)
	// data
	switch x := m.Data.(type) {
	case *JarvisMsg_NodeInfo:
		s := proto.Size(x.NodeInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_CtrlInfo:
		s := proto.Size(x.CtrlInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_CtrlResult:
		s := proto.Size(x.CtrlResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_ConnInfo:
		s := proto.Size(x.ConnInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_Msg:
		s := proto.Size(x.Msg)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_File:
		s := proto.Size(x.File)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_RequestFile:
		s := proto.Size(x.RequestFile)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_MultiMsgData:
		s := proto.Size(x.MultiMsgData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_ReplyConn2:
		s := proto.Size(x.ReplyConn2)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_ReplyTransferFile:
		s := proto.Size(x.ReplyTransferFile)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_UpdateNode:
		s := proto.Size(x.UpdateNode)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*NodeBaseInfo)(nil), "jarviscorepb.NodeBaseInfo")
	proto.RegisterType((*ReplyConnect2)(nil), "jarviscorepb.ReplyConnect2")
	proto.RegisterType((*ConnectInfo)(nil), "jarviscorepb.ConnectInfo")
	proto.RegisterType((*ReplyJoin)(nil), "jarviscorepb.ReplyJoin")
	proto.RegisterType((*ReplyTransferFile)(nil), "jarviscorepb.ReplyTransferFile")
	proto.RegisterType((*FileData)(nil), "jarviscorepb.FileData")
	proto.RegisterType((*RequestFile)(nil), "jarviscorepb.RequestFile")
	proto.RegisterType((*CtrlScriptData)(nil), "jarviscorepb.CtrlScriptData")
	proto.RegisterType((*CtrlScript2Data)(nil), "jarviscorepb.CtrlScript2Data")
	proto.RegisterType((*CtrlInfo)(nil), "jarviscorepb.CtrlInfo")
	proto.RegisterType((*CtrlResult)(nil), "jarviscorepb.CtrlResult")
	proto.RegisterType((*MultiMsgData)(nil), "jarviscorepb.MultiMsgData")
	proto.RegisterType((*UpdateNode)(nil), "jarviscorepb.UpdateNode")
	proto.RegisterType((*JarvisMsg)(nil), "jarviscorepb.JarvisMsg")
	proto.RegisterEnum("jarviscorepb.MSGTYPE", MSGTYPE_name, MSGTYPE_value)
	proto.RegisterEnum("jarviscorepb.REPLYTYPE", REPLYTYPE_name, REPLYTYPE_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JarvisCoreServClient is the client API for JarvisCoreServ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JarvisCoreServClient interface {
	ProcMsg(ctx context.Context, in *JarvisMsg, opts ...grpc.CallOption) (JarvisCoreServ_ProcMsgClient, error)
}

type jarvisCoreServClient struct {
	cc *grpc.ClientConn
}

func NewJarvisCoreServClient(cc *grpc.ClientConn) JarvisCoreServClient {
	return &jarvisCoreServClient{cc}
}

func (c *jarvisCoreServClient) ProcMsg(ctx context.Context, in *JarvisMsg, opts ...grpc.CallOption) (JarvisCoreServ_ProcMsgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JarvisCoreServ_serviceDesc.Streams[0], "/jarviscorepb.JarvisCoreServ/procMsg", opts...)
	if err != nil {
		return nil, err
	}
	x := &jarvisCoreServProcMsgClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JarvisCoreServ_ProcMsgClient interface {
	Recv() (*JarvisMsg, error)
	grpc.ClientStream
}

type jarvisCoreServProcMsgClient struct {
	grpc.ClientStream
}

func (x *jarvisCoreServProcMsgClient) Recv() (*JarvisMsg, error) {
	m := new(JarvisMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JarvisCoreServServer is the server API for JarvisCoreServ service.
type JarvisCoreServServer interface {
	ProcMsg(*JarvisMsg, JarvisCoreServ_ProcMsgServer) error
}

func RegisterJarvisCoreServServer(s *grpc.Server, srv JarvisCoreServServer) {
	s.RegisterService(&_JarvisCoreServ_serviceDesc, srv)
}

func _JarvisCoreServ_ProcMsg_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JarvisMsg)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JarvisCoreServServer).ProcMsg(m, &jarvisCoreServProcMsgServer{stream})
}

type JarvisCoreServ_ProcMsgServer interface {
	Send(*JarvisMsg) error
	grpc.ServerStream
}

type jarvisCoreServProcMsgServer struct {
	grpc.ServerStream
}

func (x *jarvisCoreServProcMsgServer) Send(m *JarvisMsg) error {
	return x.ServerStream.SendMsg(m)
}

var _JarvisCoreServ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jarviscorepb.JarvisCoreServ",
	HandlerType: (*JarvisCoreServServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "procMsg",
			Handler:       _JarvisCoreServ_ProcMsg_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "jarviscore.proto",
}

func init() { proto.RegisterFile("jarviscore.proto", fileDescriptor_jarviscore_7b99be9d5e7b610b) }

var fileDescriptor_jarviscore_7b99be9d5e7b610b = []byte{
	// 1290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x6d, 0x8f, 0xdb, 0xc4,
	0x13, 0x8f, 0xe3, 0x3c, 0x4e, 0x1e, 0x6e, 0x6f, 0xdb, 0x5e, 0xdd, 0xeb, 0x5f, 0x7f, 0x4e, 0x16,
	0x82, 0xa3, 0x54, 0x57, 0x48, 0x29, 0x20, 0x24, 0x04, 0x69, 0xe2, 0x34, 0x69, 0xf3, 0x70, 0x5d,
	0x3b, 0xa0, 0x4a, 0xa0, 0xc8, 0x17, 0xef, 0xa5, 0x29, 0x89, 0x1d, 0xd6, 0x4e, 0x45, 0x5e, 0xf0,
	0x55, 0xf8, 0x06, 0x7c, 0x01, 0xf8, 0x42, 0x7c, 0x0c, 0xb4, 0x63, 0x3b, 0xb1, 0xd3, 0xb4, 0xe5,
	0x95, 0x77, 0x7e, 0xf3, 0x9b, 0x87, 0x9d, 0xd9, 0x19, 0x03, 0x79, 0x65, 0x8b, 0xd7, 0x73, 0x7f,
	0xea, 0x09, 0x7e, 0xb1, 0x12, 0x5e, 0xe0, 0xd1, 0xea, 0x0e, 0x59, 0x5d, 0x9d, 0xde, 0x99, 0x79,
	0xde, 0x6c, 0xc1, 0x1f, 0xa0, 0xee, 0x6a, 0x7d, 0xfd, 0xc0, 0x76, 0x37, 0x21, 0x51, 0xff, 0x4b,
	0x81, 0xea, 0xd0, 0x73, 0xf8, 0x63, 0xdb, 0xe7, 0x3d, 0xf7, 0xda, 0xa3, 0xa7, 0x50, 0xf2, 0xb9,
	0x78, 0xdd, 0x74, 0x1c, 0xa1, 0x29, 0x67, 0xca, 0x79, 0x99, 0x6d, 0x65, 0x4a, 0x21, 0x67, 0x4b,
	0x3c, 0x8b, 0x38, 0x9e, 0x25, 0xe6, 0xda, 0x4b, 0xae, 0xa9, 0x21, 0x26, 0xcf, 0xf4, 0x1c, 0x8e,
	0x5c, 0xcf, 0xe1, 0xd6, 0x66, 0xc5, 0x7f, 0xe0, 0xc2, 0x9f, 0x7b, 0xae, 0x96, 0x43, 0xf5, 0x3e,
	0x2c, 0xa3, 0xc5, 0x90, 0x96, 0x0f, 0xa3, 0xc5, 0x32, 0x3d, 0x83, 0x8a, 0xcc, 0x3f, 0xf6, 0x50,
	0x40, 0x75, 0x12, 0xd2, 0xa7, 0x50, 0x63, 0x7c, 0xb5, 0xd8, 0xb4, 0x3c, 0xd7, 0xe5, 0xd3, 0xa0,
	0x41, 0x3f, 0x84, 0xda, 0xc6, 0x5b, 0x8b, 0xbe, 0xed, 0x07, 0x03, 0x7f, 0xd6, 0x6b, 0xe3, 0x0d,
	0x54, 0x96, 0x06, 0xe9, 0x7d, 0x50, 0xdd, 0xab, 0x39, 0xde, 0xa2, 0xd2, 0x38, 0xbd, 0x48, 0x96,
	0xea, 0x22, 0x59, 0x0b, 0x26, 0x69, 0xfa, 0xcf, 0x50, 0x89, 0xfc, 0xbf, 0xb7, 0x3e, 0x0d, 0x28,
	0x2c, 0x37, 0x92, 0xf5, 0x1f, 0x7c, 0x47, 0x4c, 0xfd, 0x21, 0x94, 0xf1, 0x0e, 0x4f, 0xbd, 0xb9,
	0xbb, 0x2d, 0xb0, 0x72, 0xa0, 0xc0, 0xd9, 0x5d, 0x81, 0xf5, 0xcf, 0xe1, 0x18, 0x8d, 0x2c, 0x61,
	0xbb, 0xfe, 0x35, 0x17, 0x9d, 0xf9, 0x82, 0xd3, 0xff, 0x41, 0x79, 0xe9, 0x3c, 0x32, 0x03, 0x31,
	0x77, 0x67, 0x91, 0x87, 0x1d, 0xa0, 0x07, 0x50, 0x92, 0xac, 0xb6, 0x1d, 0xd8, 0xd2, 0xe5, 0xf5,
	0x7c, 0xc1, 0x91, 0x54, 0x65, 0x78, 0x96, 0xf7, 0x92, 0xdf, 0x44, 0xa8, 0xad, 0x2c, 0x75, 0x0e,
	0xf7, 0x83, 0x4b, 0x3b, 0x78, 0x19, 0xf5, 0x79, 0x2b, 0xa7, 0xa3, 0xe6, 0xf6, 0xa3, 0x7e, 0x02,
	0x15, 0xc6, 0x7f, 0x5d, 0x73, 0x3f, 0xe8, 0xec, 0x07, 0x51, 0xd2, 0x41, 0xf4, 0x9f, 0xa0, 0xde,
	0x0a, 0xc4, 0xc2, 0x9c, 0x8a, 0xf9, 0x2a, 0x78, 0x57, 0x9a, 0xdb, 0x54, 0xb2, 0x7b, 0xa9, 0x24,
	0xbd, 0xab, 0x7b, 0xde, 0x7f, 0x87, 0xa3, 0x9d, 0xf7, 0x06, 0xba, 0xff, 0x12, 0xc0, 0x47, 0xb1,
	0x13, 0x07, 0xa9, 0x34, 0x4e, 0xd2, 0x1d, 0x8b, 0x2b, 0xc6, 0x12, 0x4c, 0xda, 0x80, 0x92, 0x2f,
	0xa6, 0xf2, 0xe8, 0x6b, 0xd9, 0x33, 0xf5, 0x1d, 0x56, 0x5b, 0x9e, 0xfe, 0xb7, 0x02, 0x25, 0x19,
	0x1f, 0x9f, 0xd0, 0x09, 0x14, 0xa6, 0xf2, 0x1c, 0x3f, 0xcf, 0x48, 0x92, 0xf9, 0xcb, 0x13, 0x0e,
	0x43, 0x74, 0xb7, 0x58, 0xa6, 0x1a, 0x14, 0xa7, 0xde, 0x72, 0x69, 0xbb, 0x4e, 0x74, 0xb5, 0x58,
	0x94, 0xde, 0x56, 0xb6, 0xb0, 0x97, 0xbe, 0x96, 0x3b, 0x53, 0xcf, 0xcb, 0x2c, 0x92, 0xe4, 0xf8,
	0x38, 0x3c, 0x4c, 0x5b, 0x8e, 0x4f, 0x38, 0x5d, 0x49, 0x88, 0x7e, 0x0c, 0xaa, 0x63, 0x07, 0xda,
	0x3f, 0x45, 0xbc, 0xfa, 0xcd, 0x8b, 0x70, 0x4b, 0x5c, 0xc4, 0x5b, 0xe2, 0xa2, 0xe9, 0x6e, 0x98,
	0x64, 0xe8, 0x6d, 0x00, 0x99, 0x3c, 0xe3, 0xfe, 0x7a, 0x11, 0xbc, 0x35, 0xfd, 0xff, 0x03, 0x4c,
	0xb7, 0xac, 0xe8, 0x02, 0x09, 0x44, 0x7f, 0x05, 0xd5, 0xc1, 0x7a, 0x11, 0xcc, 0x07, 0xfe, 0x0c,
	0xeb, 0xff, 0x11, 0xd4, 0x03, 0x2f, 0xb0, 0x17, 0x03, 0x7f, 0xd6, 0xe7, 0xee, 0x2c, 0x78, 0x19,
	0xf9, 0xdb, 0x43, 0x71, 0x0f, 0xac, 0x85, 0x1c, 0x5d, 0xd7, 0xe1, 0xbf, 0xa1, 0xe3, 0x3c, 0x4b,
	0x42, 0x94, 0x80, 0x7a, 0xb5, 0xbe, 0xc6, 0xc2, 0x54, 0x99, 0x3c, 0xea, 0x0c, 0x60, 0xbc, 0x72,
	0xec, 0x80, 0xcb, 0x99, 0x3b, 0xb4, 0x8f, 0x94, 0xf7, 0xef, 0xa3, 0x6c, 0x7a, 0x1f, 0xe9, 0x7f,
	0x94, 0xa0, 0xfc, 0x14, 0xfb, 0x3c, 0xf0, 0x67, 0xf4, 0x26, 0xe4, 0x97, 0x89, 0x15, 0x13, 0x0a,
	0xd8, 0xa6, 0xb5, 0xb0, 0xe6, 0xd1, 0x10, 0xa9, 0x2c, 0x16, 0x25, 0xdf, 0x9f, 0xcf, 0x5c, 0x16,
	0x65, 0x19, 0x0a, 0x31, 0x6a, 0xe2, 0xe4, 0x44, 0xa8, 0x89, 0x2d, 0x5d, 0x5f, 0x3d, 0xe3, 0x1b,
	0xec, 0x5a, 0x95, 0x45, 0x92, 0xf4, 0xee, 0x8b, 0x29, 0xae, 0x9e, 0x70, 0x1b, 0xc6, 0xa2, 0xb4,
	0x58, 0x6e, 0x50, 0x51, 0x44, 0x45, 0x24, 0xc5, 0xe3, 0x82, 0x9a, 0xd2, 0x6e, 0x5c, 0x50, 0xf7,
	0x00, 0x8a, 0x4b, 0x7f, 0x86, 0x57, 0x2d, 0x9f, 0x29, 0xe7, 0xf5, 0xc6, 0xad, 0xf4, 0x33, 0x1e,
	0x98, 0x4f, 0xac, 0x17, 0x97, 0x06, 0x8b, 0x59, 0xf4, 0x11, 0x94, 0x05, 0x6e, 0x1d, 0x69, 0x02,
	0x68, 0x72, 0x3b, 0x6d, 0xc2, 0x8c, 0xcb, 0xfe, 0x0b, 0x34, 0xda, 0x31, 0x65, 0x77, 0xb8, 0x10,
	0x5a, 0x05, 0xc3, 0xcb, 0xa3, 0xdc, 0x19, 0x8b, 0xed, 0x8a, 0xae, 0x62, 0x9d, 0x76, 0x80, 0x7c,
	0x47, 0x68, 0x1c, 0xaa, 0x6b, 0xa8, 0x4e, 0x20, 0xf4, 0xeb, 0xb0, 0x47, 0xb8, 0x67, 0x9d, 0xf7,
	0xed, 0xd9, 0x6e, 0x86, 0x6d, 0xd9, 0xf4, 0x8b, 0x70, 0xc0, 0xd0, 0x92, 0x1f, 0x9a, 0xf7, 0x78,
	0x44, 0xa5, 0x55, 0xcc, 0xa4, 0xdf, 0xa4, 0xde, 0xf5, 0x35, 0xda, 0x69, 0x6f, 0xda, 0x85, 0xfa,
	0x6e, 0x26, 0xf9, 0xe6, 0xe9, 0x57, 0x50, 0x9a, 0x7a, 0xae, 0x8b, 0x11, 0x67, 0x68, 0x79, 0x67,
	0xcf, 0x72, 0xf7, 0x6b, 0xc1, 0xa0, 0x11, 0x99, 0x7e, 0x0a, 0xea, 0xd2, 0x9f, 0x69, 0x2f, 0xd1,
	0x66, 0xaf, 0xca, 0xdb, 0x47, 0xd8, 0xcd, 0x30, 0xc9, 0xa2, 0xf7, 0xa3, 0x45, 0x39, 0x7f, 0xd7,
	0x0e, 0xeb, 0x66, 0xa2, 0x15, 0xfa, 0x2d, 0x54, 0xc4, 0x6e, 0x27, 0x6b, 0xaf, 0x0e, 0xa5, 0x95,
	0x58, 0xda, 0xdd, 0x0c, 0x4b, 0xf2, 0xe9, 0xf7, 0x50, 0x5d, 0x26, 0xc6, 0x58, 0xfb, 0xe5, 0x50,
	0x0b, 0x92, 0x83, 0xde, 0xcd, 0xb0, 0x94, 0x05, 0x6d, 0x46, 0x0d, 0x96, 0x77, 0x6f, 0x68, 0x0b,
	0xb4, 0xbf, 0xbb, 0x1f, 0x3f, 0xf1, 0x5b, 0x7f, 0x9c, 0xd5, 0x14, 0x59, 0xd7, 0x9d, 0x11, 0x1d,
	0xc1, 0xb1, 0xd8, 0xff, 0x01, 0x6a, 0x4b, 0xf4, 0xf4, 0xc1, 0x01, 0x4f, 0x49, 0x5a, 0x37, 0xc3,
	0xde, 0xb4, 0x95, 0x4d, 0x5e, 0x6f, 0x17, 0x86, 0xe6, 0x1e, 0x6a, 0xf2, 0x6e, 0xa1, 0xc8, 0x64,
	0x76, 0xec, 0xc7, 0x05, 0xc8, 0x39, 0x76, 0x60, 0xdf, 0xfb, 0x53, 0x85, 0x62, 0x34, 0x34, 0xb4,
	0x06, 0xe5, 0xe1, 0xb8, 0xdf, 0x9f, 0x48, 0x81, 0x64, 0x28, 0x81, 0x6a, 0x6b, 0x34, 0x1c, 0x1a,
	0x2d, 0x6b, 0x32, 0x1c, 0xb5, 0x0d, 0xa2, 0xd0, 0x63, 0xa8, 0x31, 0xe3, 0xf9, 0xd8, 0x30, 0x43,
	0xc4, 0x24, 0x59, 0x7a, 0x04, 0x95, 0xce, 0x88, 0xfd, 0xd8, 0x64, 0xed, 0xc9, 0xc0, 0x7c, 0x42,
	0x54, 0x69, 0x15, 0x73, 0x5a, 0x16, 0xeb, 0x93, 0x1c, 0xbd, 0x05, 0xc7, 0x38, 0x63, 0x28, 0x4f,
	0x98, 0x61, 0x8e, 0xfb, 0x16, 0xc9, 0xd3, 0x3a, 0x80, 0xc5, 0xc6, 0x91, 0x2b, 0x52, 0x40, 0xe7,
	0x83, 0x49, 0x02, 0x2a, 0xd2, 0x1a, 0xe4, 0xd1, 0x92, 0x94, 0x4e, 0xb3, 0x25, 0x05, 0xf3, 0x1b,
	0xb5, 0x8d, 0x49, 0x6f, 0xd8, 0x19, 0x91, 0x72, 0x98, 0x0d, 0xfa, 0x0d, 0xb3, 0x24, 0x40, 0x6f,
	0xc3, 0x8d, 0xfe, 0xa8, 0xd5, 0xec, 0xc7, 0xd0, 0x64, 0x64, 0x75, 0x0d, 0x46, 0x2a, 0x92, 0x1b,
	0x2a, 0x4c, 0x63, 0xd8, 0x96, 0x89, 0x56, 0xe9, 0xdd, 0x98, 0x9b, 0xbe, 0x52, 0x0d, 0x43, 0x1d,
	0x43, 0xcd, 0x62, 0xcd, 0xa1, 0xd9, 0x31, 0xd8, 0xa4, 0xd3, 0xeb, 0x1b, 0xa4, 0x9e, 0xbc, 0x18,
	0x22, 0x47, 0xf4, 0x04, 0x68, 0x98, 0x40, 0x0a, 0x27, 0x32, 0xcf, 0xc1, 0xb8, 0x6f, 0xf5, 0xb0,
	0x22, 0xc7, 0xf4, 0x04, 0xea, 0xa9, 0x3c, 0x1b, 0x84, 0x62, 0x8c, 0xdb, 0x70, 0x23, 0xc4, 0xd3,
	0x91, 0x6e, 0x50, 0x80, 0x02, 0x2a, 0x1a, 0xe4, 0xa6, 0xac, 0xd2, 0xf8, 0xb2, 0xdd, 0xb4, 0x0c,
	0x2c, 0xc9, 0xad, 0x7b, 0x97, 0x50, 0xde, 0x2e, 0x2c, 0x5a, 0x80, 0xec, 0xe8, 0x19, 0xc9, 0xd0,
	0x0a, 0x14, 0xa3, 0x26, 0x10, 0x45, 0x0a, 0x56, 0x6f, 0x60, 0x8c, 0xc6, 0x16, 0xc9, 0xd2, 0x12,
	0xe4, 0x7a, 0xe6, 0xc0, 0x20, 0x2a, 0x2d, 0x43, 0xde, 0x60, 0x6c, 0xc4, 0x48, 0x8e, 0x56, 0xa1,
	0x64, 0x30, 0x36, 0x30, 0x9f, 0xf4, 0xda, 0x24, 0xdf, 0x78, 0x0e, 0xf5, 0x70, 0x38, 0x5b, 0x9e,
	0xe0, 0x26, 0x17, 0xaf, 0xe9, 0x77, 0x50, 0x5c, 0x09, 0x6f, 0x2a, 0xff, 0x18, 0x6f, 0x9b, 0xe2,
	0xd3, 0xb7, 0x29, 0xf4, 0xcc, 0x67, 0xca, 0x55, 0x01, 0x7f, 0xc7, 0x0f, 0xff, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xcf, 0x10, 0x1c, 0xc9, 0xe4, 0x0b, 0x00, 0x00,
}
