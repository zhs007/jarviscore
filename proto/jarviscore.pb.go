// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jarviscore.proto

package jarviscorepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// jarvis msg type
type MSGTYPE int32

const (
	// connect jarvis node
	MSGTYPE_CONNECT_NODE MSGTYPE = 0
	// request a node's child nodes
	MSGTYPE_REQUEST_NODES MSGTYPE = 1
	// forward message
	MSGTYPE_FORWARD_MSG MSGTYPE = 2
	// request a ctrl msg
	MSGTYPE_REQUEST_CTRL MSGTYPE = 3
	// reply a ctrl result
	MSGTYPE_REPLY_CTRL_RESULT MSGTYPE = 4
	// trusted node request you trust a other node
	MSGTYPE_TRUST_NODE MSGTYPE = 5
	// trusted node request you remove a trusted node
	MSGTYPE_RM_TRUST_NODE MSGTYPE = 6
	// reply msg
	MSGTYPE_REPLY MSGTYPE = 7
	// node info
	MSGTYPE_NODE_INFO MSGTYPE = 8
	// reply connect
	MSGTYPE_REPLY_CONNECT MSGTYPE = 9
)

var MSGTYPE_name = map[int32]string{
	0: "CONNECT_NODE",
	1: "REQUEST_NODES",
	2: "FORWARD_MSG",
	3: "REQUEST_CTRL",
	4: "REPLY_CTRL_RESULT",
	5: "TRUST_NODE",
	6: "RM_TRUST_NODE",
	7: "REPLY",
	8: "NODE_INFO",
	9: "REPLY_CONNECT",
}
var MSGTYPE_value = map[string]int32{
	"CONNECT_NODE":      0,
	"REQUEST_NODES":     1,
	"FORWARD_MSG":       2,
	"REQUEST_CTRL":      3,
	"REPLY_CTRL_RESULT": 4,
	"TRUST_NODE":        5,
	"RM_TRUST_NODE":     6,
	"REPLY":             7,
	"NODE_INFO":         8,
	"REPLY_CONNECT":     9,
}

func (x MSGTYPE) String() string {
	return proto.EnumName(MSGTYPE_name, int32(x))
}
func (MSGTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_9ce94e313a5f8703, []int{0}
}

type NodeBaseInfo struct {
	ServAddr             string   `protobuf:"bytes,1,opt,name=servAddr,proto3" json:"servAddr,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeBaseInfo) Reset()         { *m = NodeBaseInfo{} }
func (m *NodeBaseInfo) String() string { return proto.CompactTextString(m) }
func (*NodeBaseInfo) ProtoMessage()    {}
func (*NodeBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_9ce94e313a5f8703, []int{0}
}
func (m *NodeBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeBaseInfo.Unmarshal(m, b)
}
func (m *NodeBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeBaseInfo.Marshal(b, m, deterministic)
}
func (dst *NodeBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeBaseInfo.Merge(dst, src)
}
func (m *NodeBaseInfo) XXX_Size() int {
	return xxx_messageInfo_NodeBaseInfo.Size(m)
}
func (m *NodeBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeBaseInfo proto.InternalMessageInfo

func (m *NodeBaseInfo) GetServAddr() string {
	if m != nil {
		return m.ServAddr
	}
	return ""
}

func (m *NodeBaseInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *NodeBaseInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReplyJoin struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyJoin) Reset()         { *m = ReplyJoin{} }
func (m *ReplyJoin) String() string { return proto.CompactTextString(m) }
func (*ReplyJoin) ProtoMessage()    {}
func (*ReplyJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_9ce94e313a5f8703, []int{1}
}
func (m *ReplyJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyJoin.Unmarshal(m, b)
}
func (m *ReplyJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyJoin.Marshal(b, m, deterministic)
}
func (dst *ReplyJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyJoin.Merge(dst, src)
}
func (m *ReplyJoin) XXX_Size() int {
	return xxx_messageInfo_ReplyJoin.Size(m)
}
func (m *ReplyJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyJoin.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyJoin proto.InternalMessageInfo

func (m *ReplyJoin) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReplyJoin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CtrlInfo struct {
	CtrlID               int64    `protobuf:"varint,1,opt,name=ctrlID,proto3" json:"ctrlID,omitempty"`
	CtrlType             string   `protobuf:"bytes,2,opt,name=ctrlType,proto3" json:"ctrlType,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Params               []string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlInfo) Reset()         { *m = CtrlInfo{} }
func (m *CtrlInfo) String() string { return proto.CompactTextString(m) }
func (*CtrlInfo) ProtoMessage()    {}
func (*CtrlInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_9ce94e313a5f8703, []int{2}
}
func (m *CtrlInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlInfo.Unmarshal(m, b)
}
func (m *CtrlInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlInfo.Marshal(b, m, deterministic)
}
func (dst *CtrlInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlInfo.Merge(dst, src)
}
func (m *CtrlInfo) XXX_Size() int {
	return xxx_messageInfo_CtrlInfo.Size(m)
}
func (m *CtrlInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlInfo proto.InternalMessageInfo

func (m *CtrlInfo) GetCtrlID() int64 {
	if m != nil {
		return m.CtrlID
	}
	return 0
}

func (m *CtrlInfo) GetCtrlType() string {
	if m != nil {
		return m.CtrlType
	}
	return ""
}

func (m *CtrlInfo) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *CtrlInfo) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type CtrlResult struct {
	CtrlID               int64    `protobuf:"varint,1,opt,name=ctrlID,proto3" json:"ctrlID,omitempty"`
	CtrlResult           string   `protobuf:"bytes,2,opt,name=ctrlResult,proto3" json:"ctrlResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlResult) Reset()         { *m = CtrlResult{} }
func (m *CtrlResult) String() string { return proto.CompactTextString(m) }
func (*CtrlResult) ProtoMessage()    {}
func (*CtrlResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_9ce94e313a5f8703, []int{3}
}
func (m *CtrlResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlResult.Unmarshal(m, b)
}
func (m *CtrlResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlResult.Marshal(b, m, deterministic)
}
func (dst *CtrlResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlResult.Merge(dst, src)
}
func (m *CtrlResult) XXX_Size() int {
	return xxx_messageInfo_CtrlResult.Size(m)
}
func (m *CtrlResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlResult.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlResult proto.InternalMessageInfo

func (m *CtrlResult) GetCtrlID() int64 {
	if m != nil {
		return m.CtrlID
	}
	return 0
}

func (m *CtrlResult) GetCtrlResult() string {
	if m != nil {
		return m.CtrlResult
	}
	return ""
}

// JarvisMsg - jarvis base msg
//      sign(destAddr + curTime + data + srcAddr)
type JarvisMsg struct {
	MsgID    int64   `protobuf:"varint,1,opt,name=msgID,proto3" json:"msgID,omitempty"`
	CurTime  int64   `protobuf:"varint,2,opt,name=curTime,proto3" json:"curTime,omitempty"`
	SignR    []byte  `protobuf:"bytes,3,opt,name=signR,proto3" json:"signR,omitempty"`
	SignS    []byte  `protobuf:"bytes,4,opt,name=signS,proto3" json:"signS,omitempty"`
	PubKey   []byte  `protobuf:"bytes,5,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	SrcAddr  string  `protobuf:"bytes,6,opt,name=srcAddr,proto3" json:"srcAddr,omitempty"`
	MyAddr   string  `protobuf:"bytes,7,opt,name=myAddr,proto3" json:"myAddr,omitempty"`
	DestAddr string  `protobuf:"bytes,8,opt,name=destAddr,proto3" json:"destAddr,omitempty"`
	MsgType  MSGTYPE `protobuf:"varint,9,opt,name=msgType,proto3,enum=jarviscorepb.MSGTYPE" json:"msgType,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*JarvisMsg_NodeInfo
	//	*JarvisMsg_CtrlInfo
	//	*JarvisMsg_CtrlResult
	Data                 isJarvisMsg_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JarvisMsg) Reset()         { *m = JarvisMsg{} }
func (m *JarvisMsg) String() string { return proto.CompactTextString(m) }
func (*JarvisMsg) ProtoMessage()    {}
func (*JarvisMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_jarviscore_9ce94e313a5f8703, []int{4}
}
func (m *JarvisMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JarvisMsg.Unmarshal(m, b)
}
func (m *JarvisMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JarvisMsg.Marshal(b, m, deterministic)
}
func (dst *JarvisMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JarvisMsg.Merge(dst, src)
}
func (m *JarvisMsg) XXX_Size() int {
	return xxx_messageInfo_JarvisMsg.Size(m)
}
func (m *JarvisMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_JarvisMsg.DiscardUnknown(m)
}

var xxx_messageInfo_JarvisMsg proto.InternalMessageInfo

type isJarvisMsg_Data interface {
	isJarvisMsg_Data()
}

type JarvisMsg_NodeInfo struct {
	NodeInfo *NodeBaseInfo `protobuf:"bytes,100,opt,name=nodeInfo,proto3,oneof"`
}
type JarvisMsg_CtrlInfo struct {
	CtrlInfo *CtrlInfo `protobuf:"bytes,101,opt,name=ctrlInfo,proto3,oneof"`
}
type JarvisMsg_CtrlResult struct {
	CtrlResult *CtrlResult `protobuf:"bytes,102,opt,name=ctrlResult,proto3,oneof"`
}

func (*JarvisMsg_NodeInfo) isJarvisMsg_Data()   {}
func (*JarvisMsg_CtrlInfo) isJarvisMsg_Data()   {}
func (*JarvisMsg_CtrlResult) isJarvisMsg_Data() {}

func (m *JarvisMsg) GetData() isJarvisMsg_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *JarvisMsg) GetMsgID() int64 {
	if m != nil {
		return m.MsgID
	}
	return 0
}

func (m *JarvisMsg) GetCurTime() int64 {
	if m != nil {
		return m.CurTime
	}
	return 0
}

func (m *JarvisMsg) GetSignR() []byte {
	if m != nil {
		return m.SignR
	}
	return nil
}

func (m *JarvisMsg) GetSignS() []byte {
	if m != nil {
		return m.SignS
	}
	return nil
}

func (m *JarvisMsg) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *JarvisMsg) GetSrcAddr() string {
	if m != nil {
		return m.SrcAddr
	}
	return ""
}

func (m *JarvisMsg) GetMyAddr() string {
	if m != nil {
		return m.MyAddr
	}
	return ""
}

func (m *JarvisMsg) GetDestAddr() string {
	if m != nil {
		return m.DestAddr
	}
	return ""
}

func (m *JarvisMsg) GetMsgType() MSGTYPE {
	if m != nil {
		return m.MsgType
	}
	return MSGTYPE_CONNECT_NODE
}

func (m *JarvisMsg) GetNodeInfo() *NodeBaseInfo {
	if x, ok := m.GetData().(*JarvisMsg_NodeInfo); ok {
		return x.NodeInfo
	}
	return nil
}

func (m *JarvisMsg) GetCtrlInfo() *CtrlInfo {
	if x, ok := m.GetData().(*JarvisMsg_CtrlInfo); ok {
		return x.CtrlInfo
	}
	return nil
}

func (m *JarvisMsg) GetCtrlResult() *CtrlResult {
	if x, ok := m.GetData().(*JarvisMsg_CtrlResult); ok {
		return x.CtrlResult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*JarvisMsg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _JarvisMsg_OneofMarshaler, _JarvisMsg_OneofUnmarshaler, _JarvisMsg_OneofSizer, []interface{}{
		(*JarvisMsg_NodeInfo)(nil),
		(*JarvisMsg_CtrlInfo)(nil),
		(*JarvisMsg_CtrlResult)(nil),
	}
}

func _JarvisMsg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*JarvisMsg)
	// data
	switch x := m.Data.(type) {
	case *JarvisMsg_NodeInfo:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NodeInfo); err != nil {
			return err
		}
	case *JarvisMsg_CtrlInfo:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CtrlInfo); err != nil {
			return err
		}
	case *JarvisMsg_CtrlResult:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CtrlResult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("JarvisMsg.Data has unexpected type %T", x)
	}
	return nil
}

func _JarvisMsg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*JarvisMsg)
	switch tag {
	case 100: // data.nodeInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NodeBaseInfo)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_NodeInfo{msg}
		return true, err
	case 101: // data.ctrlInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CtrlInfo)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_CtrlInfo{msg}
		return true, err
	case 102: // data.ctrlResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CtrlResult)
		err := b.DecodeMessage(msg)
		m.Data = &JarvisMsg_CtrlResult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _JarvisMsg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*JarvisMsg)
	// data
	switch x := m.Data.(type) {
	case *JarvisMsg_NodeInfo:
		s := proto.Size(x.NodeInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_CtrlInfo:
		s := proto.Size(x.CtrlInfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JarvisMsg_CtrlResult:
		s := proto.Size(x.CtrlResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*NodeBaseInfo)(nil), "jarviscorepb.NodeBaseInfo")
	proto.RegisterType((*ReplyJoin)(nil), "jarviscorepb.ReplyJoin")
	proto.RegisterType((*CtrlInfo)(nil), "jarviscorepb.CtrlInfo")
	proto.RegisterType((*CtrlResult)(nil), "jarviscorepb.CtrlResult")
	proto.RegisterType((*JarvisMsg)(nil), "jarviscorepb.JarvisMsg")
	proto.RegisterEnum("jarviscorepb.MSGTYPE", MSGTYPE_name, MSGTYPE_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JarvisCoreServClient is the client API for JarvisCoreServ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JarvisCoreServClient interface {
	ProcMsg(ctx context.Context, in *JarvisMsg, opts ...grpc.CallOption) (JarvisCoreServ_ProcMsgClient, error)
}

type jarvisCoreServClient struct {
	cc *grpc.ClientConn
}

func NewJarvisCoreServClient(cc *grpc.ClientConn) JarvisCoreServClient {
	return &jarvisCoreServClient{cc}
}

func (c *jarvisCoreServClient) ProcMsg(ctx context.Context, in *JarvisMsg, opts ...grpc.CallOption) (JarvisCoreServ_ProcMsgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JarvisCoreServ_serviceDesc.Streams[0], "/jarviscorepb.JarvisCoreServ/procMsg", opts...)
	if err != nil {
		return nil, err
	}
	x := &jarvisCoreServProcMsgClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JarvisCoreServ_ProcMsgClient interface {
	Recv() (*JarvisMsg, error)
	grpc.ClientStream
}

type jarvisCoreServProcMsgClient struct {
	grpc.ClientStream
}

func (x *jarvisCoreServProcMsgClient) Recv() (*JarvisMsg, error) {
	m := new(JarvisMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JarvisCoreServServer is the server API for JarvisCoreServ service.
type JarvisCoreServServer interface {
	ProcMsg(*JarvisMsg, JarvisCoreServ_ProcMsgServer) error
}

func RegisterJarvisCoreServServer(s *grpc.Server, srv JarvisCoreServServer) {
	s.RegisterService(&_JarvisCoreServ_serviceDesc, srv)
}

func _JarvisCoreServ_ProcMsg_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JarvisMsg)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JarvisCoreServServer).ProcMsg(m, &jarvisCoreServProcMsgServer{stream})
}

type JarvisCoreServ_ProcMsgServer interface {
	Send(*JarvisMsg) error
	grpc.ServerStream
}

type jarvisCoreServProcMsgServer struct {
	grpc.ServerStream
}

func (x *jarvisCoreServProcMsgServer) Send(m *JarvisMsg) error {
	return x.ServerStream.SendMsg(m)
}

var _JarvisCoreServ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jarviscorepb.JarvisCoreServ",
	HandlerType: (*JarvisCoreServServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "procMsg",
			Handler:       _JarvisCoreServ_ProcMsg_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "jarviscore.proto",
}

func init() { proto.RegisterFile("jarviscore.proto", fileDescriptor_jarviscore_9ce94e313a5f8703) }

var fileDescriptor_jarviscore_9ce94e313a5f8703 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcb, 0x6f, 0xda, 0x4e,
	0x10, 0xc6, 0x31, 0x60, 0x3c, 0x21, 0xf9, 0x39, 0xab, 0x5f, 0x52, 0x8b, 0x43, 0x85, 0x38, 0xa1,
	0x1e, 0x68, 0x45, 0x7a, 0xa8, 0x7a, 0xa9, 0x12, 0x70, 0x5e, 0xe5, 0x91, 0xac, 0x8d, 0xaa, 0x9c,
	0x90, 0xb1, 0x37, 0x88, 0x0a, 0x3f, 0xb4, 0x0b, 0x48, 0xfc, 0x5b, 0x3d, 0xf5, 0xcf, 0xab, 0x76,
	0xd6, 0x76, 0x8c, 0xda, 0xdc, 0xe6, 0xfb, 0x66, 0xbe, 0xd9, 0x79, 0x69, 0xc1, 0xfa, 0xe9, 0xf3,
	0xdd, 0x4a, 0x04, 0x09, 0x67, 0xbd, 0x94, 0x27, 0x9b, 0x84, 0x34, 0x5f, 0x99, 0x74, 0xd1, 0xa1,
	0xd0, 0x9c, 0x24, 0x21, 0xbb, 0xf6, 0x05, 0xbb, 0x8f, 0x5f, 0x12, 0xd2, 0x82, 0x86, 0x60, 0x7c,
	0x77, 0x15, 0x86, 0xdc, 0xd6, 0xda, 0x5a, 0xd7, 0xa4, 0x05, 0x26, 0x04, 0xaa, 0xbe, 0xe4, 0x8f,
	0x90, 0x47, 0x5b, 0x72, 0xb1, 0x1f, 0x31, 0x5b, 0x57, 0x9c, 0xb4, 0x3b, 0x97, 0x60, 0x52, 0x96,
	0xae, 0xf7, 0x0f, 0xc9, 0x2a, 0x2e, 0x44, 0xda, 0x3f, 0x44, 0x47, 0x25, 0x51, 0x0a, 0x8d, 0xc1,
	0x86, 0xaf, 0xb1, 0x88, 0x0b, 0xa8, 0x07, 0xd2, 0x1e, 0xa2, 0x4a, 0xa7, 0x19, 0x92, 0xc5, 0x49,
	0xcb, 0xdb, 0xa7, 0xb9, 0xb6, 0xc0, 0xc4, 0x06, 0x23, 0x48, 0xa2, 0xc8, 0x8f, 0xc3, 0xac, 0x96,
	0x1c, 0xca, 0x6c, 0xa9, 0xcf, 0xfd, 0x48, 0xd8, 0xd5, 0xb6, 0xde, 0x35, 0x69, 0x86, 0x3a, 0x43,
	0x00, 0xf9, 0x22, 0x65, 0x62, 0xbb, 0xde, 0xbc, 0xf9, 0xe6, 0x7b, 0x80, 0xa0, 0x88, 0xca, 0x5e,
	0x2d, 0x31, 0x9d, 0x5f, 0x3a, 0x98, 0x0f, 0x38, 0xd1, 0xb1, 0x58, 0x92, 0xff, 0xa1, 0x16, 0x89,
	0x65, 0x91, 0x44, 0x01, 0xac, 0x6d, 0xcb, 0xbd, 0x55, 0xd6, 0xb2, 0x4e, 0x73, 0x28, 0xe3, 0xc5,
	0x6a, 0x19, 0x53, 0xac, 0xb9, 0x49, 0x15, 0xc8, 0x59, 0xd7, 0xae, 0xbe, 0xb2, 0x2e, 0xf6, 0xb1,
	0x5d, 0x7c, 0x67, 0x7b, 0xbb, 0x86, 0x74, 0x86, 0x64, 0x76, 0xc1, 0x03, 0xdc, 0x58, 0x5d, 0x75,
	0x9e, 0x41, 0xa9, 0x88, 0xf6, 0xe8, 0x30, 0xd0, 0x91, 0x21, 0x39, 0xc7, 0x90, 0x89, 0x0d, 0x7a,
	0x1a, 0x6a, 0x8e, 0x39, 0x26, 0x1f, 0xc1, 0x88, 0xc4, 0x12, 0x47, 0x6c, 0xb6, 0xb5, 0xee, 0x69,
	0xff, 0xbc, 0x57, 0x3e, 0x98, 0xde, 0xd8, 0xbd, 0xf5, 0x9e, 0x1f, 0x1d, 0x9a, 0x47, 0x91, 0x2f,
	0xd0, 0x88, 0x93, 0x10, 0xaf, 0xc7, 0x0e, 0xdb, 0x5a, 0xf7, 0xb8, 0xdf, 0x3a, 0x54, 0x94, 0xef,
	0xeb, 0xae, 0x42, 0x8b, 0x68, 0xf2, 0x59, 0xad, 0x13, 0x95, 0x0c, 0x95, 0x17, 0x87, 0xca, 0xfc,
	0x20, 0xa4, 0x2a, 0x8f, 0x24, 0x5f, 0x0f, 0x16, 0xf2, 0x82, 0x3a, 0xfb, 0x6f, 0x9d, 0xf2, 0xdf,
	0x55, 0xca, 0xcb, 0xba, 0xae, 0x43, 0x35, 0xf4, 0x37, 0xfe, 0x87, 0xdf, 0x1a, 0x18, 0x59, 0x23,
	0xc4, 0x82, 0xe6, 0x60, 0x3a, 0x99, 0x38, 0x03, 0x6f, 0x3e, 0x99, 0x0e, 0x1d, 0xab, 0x42, 0xce,
	0xe0, 0x84, 0x3a, 0x4f, 0x33, 0xc7, 0x55, 0x8c, 0x6b, 0x69, 0xe4, 0x3f, 0x38, 0xbe, 0x99, 0xd2,
	0x1f, 0x57, 0x74, 0x38, 0x1f, 0xbb, 0xb7, 0xd6, 0x91, 0x54, 0xe5, 0x31, 0x03, 0x8f, 0x8e, 0x2c,
	0x9d, 0x9c, 0xc3, 0x19, 0x75, 0x1e, 0x47, 0xcf, 0x88, 0xe7, 0xd4, 0x71, 0x67, 0x23, 0xcf, 0xaa,
	0x92, 0x53, 0x00, 0x8f, 0xce, 0xb2, 0x54, 0x56, 0x0d, 0x93, 0x8f, 0xe7, 0x25, 0xaa, 0x4e, 0x4c,
	0xa8, 0xa1, 0xd2, 0x32, 0xc8, 0x09, 0x98, 0x92, 0x9c, 0xdf, 0x4f, 0x6e, 0xa6, 0x56, 0x43, 0x55,
	0x82, 0x39, 0x55, 0x85, 0x96, 0xd9, 0x7f, 0x82, 0x53, 0x75, 0x6e, 0x83, 0x84, 0x33, 0x97, 0xf1,
	0x1d, 0xf9, 0x06, 0x46, 0xca, 0x93, 0x40, 0x9e, 0xdf, 0xbb, 0xc3, 0x39, 0x14, 0x77, 0xd9, 0x7a,
	0xcb, 0xd1, 0xa9, 0x7c, 0xd2, 0x16, 0x75, 0xfc, 0x18, 0x2e, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x6d, 0xa4, 0x00, 0xde, 0x2c, 0x04, 0x00, 0x00,
}
