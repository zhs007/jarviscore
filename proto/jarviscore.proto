syntax = "proto3";
import "google/protobuf/any.proto";
package jarviscorepb;

// jarvis msg type
enum MSGTYPE {
    // null type
    NULL_TYPE = 0;
    // connect jarvis node
    CONNECT_NODE = 1;
    // request a node's child nodes
    REQUEST_NODES = 2;
    // forward message
    FORWARD_MSG = 3;
    // request a ctrl msg
    REQUEST_CTRL = 4;
    // reply a ctrl result
    REPLY_CTRL_RESULT = 5;
    // trusted node request you trust a other node
    TRUST_NODE = 6;
    // trusted node request you remove a trusted node
    RM_TRUST_NODE = 7;
    // reply msg
    REPLY = 8 [deprecated = true];
    // node info
    NODE_INFO = 9;
    // reply connect
    REPLY_CONNECT = 10;
    // local connect other
    LOCAL_CONNECT_OTHER = 11 [deprecated = true];
    // local sendmsg
    LOCAL_SENDMSG = 12 [deprecated = true];
    // local request nodes child
    LOCAL_REQUEST_NODES = 13 [deprecated = true];
    // transfer file
    TRANSFER_FILE = 14;
    // request file
    REQUEST_FILE = 15;
    // reply request file
    REPLY_REQUEST_FILE = 16;
    // multi message
    MULTI_MSG = 17;    
    // reply connect2
    REPLY_CONNECT2 = 18 [deprecated = true];
    // reply transfer file
    REPLY_TRANSFER_FILE = 19;
    // reply2 msg
    REPLY2 = 20;
    // update node
    UPDATENODE = 21;
    // node status
    NODESTATUS = 22;
    // request node status
    REQUEST_NODESTATUS = 23;
    // file hash data
    FILE_HASH_DATA = 24;
}

// REPLYTYPE - reply type
enum REPLYTYPE {
    // reply ok
    OK = 0;
    // forward
    FORWARD = 1;
    // timeout
    TIMEOUT = 2;
    // is me
    ISME = 3;
    // error
    ERROR = 4;
    // messageid error
    ERRMSGID = 5;
    // I got it
    IGOTIT = 6;
}

message NodeBaseInfo {
    // node server address
    string servAddr = 1;
    // node address
    string addr = 2;
    // node name
    string name = 3;
    // nodetype version
    string nodeTypeVersion = 4;
    // node type
    string nodeType = 5;
    // jarviscore version
    string coreVersion = 6;
}

// ReplyConnect2 - used in REPLY_CONNECT2
message ReplyConnect2 {
    int64 yourLastMsgID = 1;
    NodeBaseInfo nbi = 2;
}

// ConnectInfo - used in CONNECT_NODE
message ConnectInfo {
    string servAddr = 1;
    NodeBaseInfo myInfo = 2;
}

message ReplyJoin {
    string addr = 1;
    string name = 2;
}

// ReplyTransferFile - used in REPLY_TRANSFER_FILE
message ReplyTransferFile {
    string md5String = 1;
}

// FileType - file type
enum FileType {
    FT_BINARY = 0;
    FT_UTF8 = 1;
}

// FileData - file data
message FileData {
    bytes file = 1;
    string filename = 2;
    string destPath = 3;
    string md5String = 4;
    FileType ft = 5;
    int64 start = 6;
    int64 length = 7;
    int64 totalLength = 8;
    string fileMD5String = 9;
}

// FileHashData - file hash data
message FileHashData {
    string filename = 1;
    string fileMD5String = 2;
}

// RequestFile - request file
message RequestFile {
    string filename = 1;
    FileType ft = 2;
    int64 start = 3;
    int64 length = 4;
}

// CtrlScriptData - used in CtrlInfo.dat
//                - scriptfile
message CtrlScriptData {
    bytes file = 1;
    string destPath = 2;
    string filename = 3;
}

// CtrlScript2Data - used in CtrlInfo.dat
//                 - scriptfile2
message CtrlScript2Data {
    FileData scriptFile = 1;
    repeated FileData srcFiles = 2;
}

// CtrlInfo - 
message CtrlInfo {
    int64 ctrlID = 1;
    string ctrlType = 2;
    string command = 3;
    repeated string params = 4;
    string description = 5;

    google.protobuf.Any dat = 1000;
}

message CtrlResult {
    int64 ctrlID = 1;
    string ctrlResult = 2;
}

message MultiMsgData {
    int64 totalMsgLength = 1;
    int32 curMsgIndex = 2;
    bytes buf = 3;
}

// UpdateNode - for UPDATENODE
message UpdateNode {
    // nodetype version
    string nodeTypeVersion = 1;
    // node type
    string nodeType = 2;
}

// L2PoolInfo -
message L2PoolInfo {
	int32 numsMapRoutine = 1;
	int32 numsChanRemove = 2;
	int32 numsChanWaiting = 3;
	int32 numsChanTask = 4;
	int32 numsTasks = 5;
	int32 maxNums = 6;
	int32 numsWaiting = 7;
	int32 numsTotal = 8;
	int32 curTaskID = 9;
	int32 zeroTaskID = 10;
}

// JarvisNodeStatus - for NODESTATUS
message JarvisNodeStatus {
    NodeBaseInfo myBaseInfo = 1;
    repeated NodeBaseInfo lstConnected = 2;
    L2PoolInfo msgPool = 3; 
}

// JarvisMsg - jarvis base msg
//      sign(msgID + msgType + destAddr + curTime + srcAddr + data)
message JarvisMsg {
    int64 msgID = 1;
    int64 curTime = 2;
    bytes signR = 3;
    bytes signS = 4;
    bytes pubKey = 5;
    string srcAddr = 6;
    string myAddr = 7;
    string destAddr = 8;
    MSGTYPE msgType = 9;
    REPLYTYPE replyType = 10;
    string err = 11;
    int64 lastMsgID = 12;
    int64 replyMsgID = 13;

    oneof data {
        NodeBaseInfo nodeInfo = 100;
        CtrlInfo ctrlInfo = 101;
        CtrlResult ctrlResult = 102;
        ConnectInfo connInfo = 103;
        JarvisMsg msg = 104;
        FileData file = 105;
        RequestFile requestFile = 106;
        MultiMsgData multiMsgData = 107;
        ReplyConnect2 replyConn2 = 108 [deprecated = true];
        ReplyTransferFile replyTransferFile = 109;
        UpdateNode updateNode = 110;
        JarvisNodeStatus nodeStatus = 111;
        FileHashData fileHashData = 112;
    }
}

service JarvisCoreServ {
    rpc procMsg(JarvisMsg) returns (stream JarvisMsg) {}
}