syntax = "proto3";

package jarviscorepb;

enum CODE {
    OK = 0;

    INVALID_ADDR = 1;           // addr fail 
    ALREADY_IN = 2;             // already in
    FORWARD_MSG = 3;            // forward msg
    BROADCAST_MSG = 4;          // broadcast msg
    NOCTRLMOD = 5;              // no ctrl module
    CLIENT_ALREADY_START = 6;   // client already start
}

enum NODETYPE {
    NORMAL = 0;
    SH = 1;
    TELEBOT = 2;
}

enum CHANNELTYPE {
    NODEINFO = 0;
    CTRL = 1;
}

enum CTRLTYPE {
    SHELL = 0;
}

message PrivateKey {
    bytes priKey = 1;
}

message PublicKey {
    bytes pubKey = 1;
}

message NodeInfo {
    string servAddr = 1;
    string addr = 2;
    string name = 3;
    NODETYPE nodeType = 4;
}

message NodeInfoInDB {
    NodeInfo nodeInfo = 1;
    int32 connectNums = 2;
    int32 connectedNums = 3;
}

message Join {
    string servAddr = 1;
    string addr = 2;
    string name = 3;
    NODETYPE nodeType = 4;
}

message ReplyJoin {
    CODE code = 1;
    string addr = 2;
    string name = 3;
    NODETYPE nodeType = 4;
}

message BaseReply {
    CODE code = 1;
}

message Subscribe {
    CHANNELTYPE channelType = 1;
    string addr = 2;
}

message CtrlInfo {
    int64 ctrlid = 1;
    string destAddr = 2;
    string srcAddr = 3;
    string myAddr = 4;
    CTRLTYPE ctrlType = 5;
    string command = 6;
    int32 forwordNums = 7;
}

message CtrlResult {
    int64 ctrlid = 1;
    string destAddr = 2;
    string srcAddr = 3;
    string myAddr = 4;
    string ctrlResult = 5;
    int32 forwordNums = 6;
}

message ChannelInfo {
    CHANNELTYPE channelType = 1;
    oneof data {
        NodeInfo nodeInfo = 2;
        CtrlInfo ctrlInfo = 3;
    }
}

service JarvisCoreServ {
    rpc join (Join) returns (ReplyJoin) {}
    rpc requestCtrl (CtrlInfo) returns (BaseReply) {}
    rpc replyCtrl (CtrlResult) returns (BaseReply) {}
    rpc subscribe (Subscribe) returns (stream ChannelInfo) {}
}